<?xml version="1.0" encoding="utf-8"?>

<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />

    <PropertyGroup>
        <VersionInformation>$(GeneratedHeadersDirectory)VersionInformation.h</VersionInformation>
    </PropertyGroup>

    <PropertyGroup>
        <CertificateName Condition=" '$(CertificateName)' == '' ">MyCertificate</CertificateName>
        <CertificatePassword Condition=" '$(CertificatePassword)' == '' ">P@SsW0Rd!</CertificatePassword>
    </PropertyGroup>
    <Target Name="CleanVersionInformation" AfterTargets="Clean">
        <Delete Files="$(VersionInformation)" />
    </Target>

    <Target Name="CreateVersionInformation"
            BeforeTargets="ClCompile"
            DependsOnTargets="QueryVersion"
            Outputs="$(VersionInformation)">
        <ItemGroup>
            <AssemblyAttributes Include="#pragma once" />
            <AssemblyAttributes Include="#define ASSEMBLY_VERSION_ATTRIBUTE   &quot;$(Version)&quot;" />
            <AssemblyAttributes Include="#define PRODUCT_VERSION_ATTRIBUTE   &quot;$(PackageVersion)&quot;" />
            <AssemblyAttributes Include="#define RESOURCE_FILENAME_ATTRIBUTE  &quot;$(TargetName)&quot;" />
            <AssemblyAttributes Include="#define RESOURCE_VERSION_ATTRIBUTE    $(Version.Replace('.',','))" />
        </ItemGroup>
        <MakeDir Condition="!exists('$(GeneratedHeadersDirectory)')" Directories="$(GeneratedHeadersDirectory)" />
        <WriteLinesToFile Condition=" '$(Version)'!='$(CachedVersion)' Or !Exists('$(VersionInformation)') "
                          File="$(VersionInformation)"
                          Lines="@(AssemblyAttributes)"
                          Overwrite="true"
                          Encoding="ASCII" />
    </Target>

    <Target Name="Sign" Condition=" $(SignExeAndMsi) == 'True' AND
            Exists('$(ProjectDir)GenerateCertificate.ps1') AND
        ($(OutputType) == 'Exe' OR $(OutputType) == 'WinExe') "
        AfterTargets="Build">
        <Exec Command="pwsh -ExecutionPolicy Bypass -File &quot;$(ProjectDir)GenerateCertificate.ps1&quot; -CertificateName $(CertificateName) -CertificatePassword $(CertificatePassword)" />
        <Exec Command="&quot;$(SignToolPathX64)&quot; sign /fd sha256 /td sha256 /f &quot;$(ProjectDir)CodeSign.pfx&quot; /p $(CertificatePassword) /tr http://timestamp.digicert.com &quot;$(TargetPath)&quot;" StandardOutputImportance="high" />
    </Target>

    <Import Project="$(MSBuildThisFileDirectory)Ed.Common.targets" />

</Project>